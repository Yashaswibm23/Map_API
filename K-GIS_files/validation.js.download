




function IsBlank(str) {
    if (str == "" || str == null) {
        return true;
    }
}

function IsAllowed(str, min, max) {
    if ((str.length < min) || (str.length > max) || (str == "") || (str == null))
        return true;
}

function IsNotSpecialNumeric(str) {
    str = str.replace(/^\s+|\s+$/g, "");
    var ichars = "`~!@#$%^&*()+-=[];',\"<>?:|\\/}{0123456789";
    for (var i = 0; i < str.length; i++) {
        if (ichars.indexOf(str.charAt(i)) != -1) {
            return true;
        }
    }
}

function validateAddress(str) {
    str = str.replace(/^\s+|\s+$/g, "");
    var ichars = "`~!@$%^&*+=[]'\"<>?|\\}{";
    for (var i = 0; i < str.length; i++) {
        if (ichars.indexOf(str.charAt(i)) != -1) {
            return true;
        }
    }
}

function valAlphaNumeric(str) {
    str = str.replace(/^\s+|\s+$/g, "");
    var ichars = "`~!@#$%^&*()+=[];',\".<>?:|\\/}{ ";
    for (var i = 0; i < str.length; i++) {
        if (ichars.indexOf(str.charAt(i)) != -1) {
            return true;
        }
    }
}

function Numeric(str) {
    str = str.replace(/^\s+|\s+$/g, "");
    for (var i = 0; i < str.length; i++) {
        var ch = str.substring(i, i + 1);
        if (ch < "0" || "9" < ch)
            return true;
    }
}

function validateAge(fld) {
    var RegExPattern = /^([0-9]{1,3})$/;
    if (fld.match(RegExPattern))
        return true;
    else
        return false;
}

function AlphaNumeric(fld) {
    var RegExPattern = /^[a-zA-Z0-9]+$/;
    if (fld.match(RegExPattern))
        return true;
    else
        return false;
}

function ValidateDecimal(fld) {
    var RegExPattern = /^[0-9.]+$/;
    if (fld.match(RegExPattern))
        return true;
    else
        return false;
}

function validateDate(fld) {
    var RegExPattern = /^((((0?[1-9]|[12]\d|3[01])[\.\-\/](0?[13578]|1[02])[\.\-\/]((1[6-9]|[2-9]\d)?\d{2}))|((0?[1-9]|[12]\d|30)[\.\-\/](0?[13456789]|1[012])[\.\-\/]((1[6-9]|[2-9]\d)?\d{2}))|((0?[1-9]|1\d|2[0-8])[\.\-\/]0?2[\.\-\/]((1[6-9]|[2-9]\d)?\d{2}))|(29[\.\-\/]0?2[\.\-\/]((1[6-9]|[2-9]\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00)))|(((0[1-9]|[12]\d|3[01])(0[13578]|1[02])((1[6-9]|[2-9]\d)?\d{2}))|((0[1-9]|[12]\d|30)(0[13456789]|1[012])((1[6-9]|[2-9]\d)?\d{2}))|((0[1-9]|1\d|2[0-8])02((1[6-9]|[2-9]\d)?\d{2}))|(2902((1[6-9]|[2-9]\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00))))$/;
    if (fld.match(RegExPattern))
        return true;
    else
        return false;
}

function isP(str, str1) {
    re = /.{8,15}/
    if (!(re.test(str) && re.test(str1))) {
        alert("The password should be between 8 and 15 characters");
        return false;
    }
    if (!(str.match(/[A-Z]/g) != null && str.match(/[A-Z]/g).length >= 1 && str.match(/[a-z]/g) != null && str.match(/[a-z]/g).length >= 3 && str.match(/[0-9]/g) != null && str.match(/[0-9]/g).length >= 3)) {
        alert("The password should have atleast 1 Capital Letter, 3 Small Letters, 2 Numbers and 1 Special Character");
        return false;
    }
    if (!str.match(str1)) {
        alert("The passwords are Not same. Please Re-enter the passwords");
        return false;
    }

    var iChars = "~!@#$%^&*()_+-={}|[]\\:\";'<>?,./";
    for (var i = 0; i < str.length; i++) {
        if (iChars.indexOf(str.charAt(i)) == -1) {
            flag3 = false;
        }
        else {
            flag3 = true;
            break;
        }
    }
    if (flag3 == false) {
        alert("The password should have atleast 1 Capital Letter, 3 Small Letters, 2 Numbers and 1 Special Character");
        return false;
    }
    return true;
}

function ValidateEmailID(str) {
    str = str.replace(/^\s+|\s+$/g, "");
    var reg = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/
    if (!reg.test(str)) {
        return false;
    }
    return true;
}

//function validateDateOrg(fld) {
//    var RegExPattern = /^((((0?[1-9]|[12]\d|3[01])[\.\-\/](0?[13578]|1[02])[\.\-\/]((1[6-9]|[2-9]\d)?\d{2}))|((0?[1-9]|[12]\d|30)[\.\-\/](0?[13456789]|1[012])[\.\-\/]((1[6-9]|[2-9]\d)?\d{2}))|((0?[1-9]|1\d|2[0-8])[\.\-\/]0?2[\.\-\/]((1[6-9]|[2-9]\d)?\d{2}))|(29[\.\-\/]0?2[\.\-\/]((1[6-9]|[2-9]\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00)))|(((0[1-9]|[12]\d|3[01])(0[13578]|1[02])((1[6-9]|[2-9]\d)?\d{2}))|((0[1-9]|[12]\d|30)(0[13456789]|1[012])((1[6-9]|[2-9]\d)?\d{2}))|((0[1-9]|1\d|2[0-8])02((1[6-9]|[2-9]\d)?\d{2}))|(2902((1[6-9]|[2-9]\d)?(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00)|00))))$/;
//    if ((fld.match(RegExPattern)) && (fld != ''))
//        return true;
//    else
//        return false;
//}